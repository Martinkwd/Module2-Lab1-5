body {
    font-family: sans-serif;
    font-size: 16px;
}

a {
    text-decoration: none;
    color: purple;
}

.background-1 {
    background: #68B0AB;
}

.background-2 {
    background: #8FC0A9;
}

.background-3 {
    background: #C8D5B9;
}

.background-4 {
    background: #FAF3DD;
}

.m-20 {
    margin: 20px;
}

.h-80 {
    height: 80px;
}

.h-400 {
    height: 400px;
}

.w-80 {
    width: 80px;
}

/* Add your answers here, do not modify the above CSS */

.flex-container{
    display:flex ;
    display: flexbox;
    flex-direction: row;


}

.flex-item-1{
    flex: 1;

}

.flex-item-2{
    flex: 2;

}

.flex-item-3{
    flex: 3;

}

.flex-item-4{
    flex: 4;

}

/* using the flex and the numbers makes that each box expand one being the smallest one to 
4 that is the largest one */

.flex-center{

    justify-content: center;
    align-items: center;
}

.flex-space-between{
    justify-content: space-between;
}

.flex-basis-item-50{
    flex-basis: 25%;

}

.flex-wrap{
    flex-wrap: wrap-reverse;

}

.flex-menu {

    /* justify-content: right; */
    justify-content: center;

}

/* What you've done here is correct, and it gets the job done. Although you could change this to
use less lines of code. Instead of giving all of the items their own flex-grow property, you could
use the ".flex-menu li" selector to select all li tags inside of an element with the flex-menu class
and give them a flex-grow property and then remove the individual classes for all of the items.
If you were to do that, you'd still need styles for the fourth-item to set the order property.*/

.first-item {
    flex-grow: 1;
    
}

.second-item {
    flex-grow: 1;
    
}

.third-item {
    flex-grow: 1;
    
}

.fourth-item {
    flex-grow: 1;
    order: 5;
}

.fifth-item {
    flex-grow: 1;

}

